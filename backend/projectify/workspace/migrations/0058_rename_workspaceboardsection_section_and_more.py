# SPDX-License-Identifier: AGPL-3.0-or-later
#
# Copyright (C) 2024 JWP Consulting GK
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
"""Rename model WorkspaceBoardSection -> Section, adjust triggers."""

# Generated by Django 4.2.10 on 2024-03-15 10:08
from django.db import migrations

import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):
    """Migration."""

    dependencies = [
        ("workspace", "0057_workspaceuserinvite_redeemed_when"),
    ]

    operations = [
        migrations.RenameModel(
            old_name="WorkspaceBoardSection",
            new_name="Section",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="task",
            name="ensure_correct_workspace",
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="task",
            trigger=pgtrigger.compiler.Trigger(
                name="ensure_correct_workspace",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='\n                      DECLARE\n                        correct_workspace_id   INTEGER;\n                      BEGIN\n                        SELECT "workspace_workspace"."id" INTO correct_workspace_id\n                        FROM "workspace_workspace"\n                        INNER JOIN "workspace_workspaceboard"\n                            ON ("workspace_workspace"."id" =                             "workspace_workspaceboard"."workspace_id")\n                        INNER JOIN "workspace_section"\n                            ON ("workspace_workspaceboard"."id" =                                  "workspace_section"."workspace_board_id")\n                        INNER JOIN "workspace_task"\n                            ON ("workspace_section"."id" =                                 "workspace_task"."workspace_board_section_id")\n                        WHERE "workspace_task"."id" = NEW.id\n                        LIMIT 1;\n                        IF correct_workspace_id != NEW.workspace_id THEN\n                            RAISE EXCEPTION \'invalid workspace_id: workspace being                                 inserted does not match correct derived workspace.\';\n                        END IF;\n                        RETURN NEW;\n                      END;',
                    hash="95c70b9913aa9c558dff8033da8cdc1bfac741d4",
                    operation="INSERT OR UPDATE",
                    pgid="pgtrigger_ensure_correct_workspace_b7606",
                    table="workspace_task",
                    when="BEFORE",
                ),
            ),
        ),
    ]
