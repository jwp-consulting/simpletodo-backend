openapi: 3.0.3
info:
  title: Projectify backend API
  version: 1.0.0
  description: API for the Projectify project management software
paths:
  /corporate/stripe-webhook/:
    post:
      operationId: corporate_stripe_webhook_create
      description: Construct event type using data coming from stripe.
      tags:
      - corporate
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /corporate/workspace/{workspace_uuid}/create-billing-portal-session:
    post:
      operationId: corporate_workspace_create_billing_portal_session_create
      description: Handle POST.
      parameters:
      - in: path
        name: workspace_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - corporate
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /corporate/workspace/{workspace_uuid}/create-checkout-session:
    post:
      operationId: corporate_workspace_create_checkout_session_create
      description: Handle POST.
      parameters:
      - in: path
        name: workspace_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - corporate
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /corporate/workspace/{workspace_uuid}/customer:
    get:
      operationId: corporate_workspace_customer_retrieve
      description: Handle GET.
      parameters:
      - in: path
        name: workspace_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - corporate
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /corporate/workspace/{workspace_uuid}/redeem-coupon:
    post:
      operationId: corporate_workspace_redeem_coupon_create
      description: Handle POST.
      parameters:
      - in: path
        name: workspace_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - corporate
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /user/user/change-password:
    post:
      operationId: user_user_change_password_create
      description: Handle POST.
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePassword'
        required: true
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePasswordError'
          description: ''
  /user/user/confirm-email:
    post:
      operationId: user_user_confirm_email_create
      description: Handle POST.
      tags:
      - user
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /user/user/confirm-password-reset:
    post:
      operationId: user_user_confirm_password_reset_create
      description: Handle POST.
      tags:
      - user
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /user/user/current-user:
    get:
      operationId: user_user_current_user_retrieve
      description: Handle GET.
      tags:
      - user
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
    put:
      operationId: user_user_current_user_update
      description: Update a user.
      tags:
      - user
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /user/user/email-address-update/confirm:
    post:
      operationId: user_user_email_address_update_confirm_create
      description: Handle POST.
      tags:
      - user
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /user/user/email-address-update/request:
    post:
      operationId: user_user_email_address_update_request_create
      description: Handle POST.
      tags:
      - user
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /user/user/log-in:
    post:
      operationId: user_user_log_in_create
      description: Handle POST.
      tags:
      - user
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /user/user/log-out:
    post:
      operationId: user_user_log_out_create
      description: Handle POST.
      tags:
      - user
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /user/user/password-policy:
    get:
      operationId: user_user_password_policy_retrieve
      description: Return all information about current password policy.
      tags:
      - user
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordPolicies'
          description: ''
  /user/user/profile-picture/upload:
    post:
      operationId: user_user_profile_picture_upload_create
      description: Handle POST.
      tags:
      - user
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /user/user/request-password-reset:
    post:
      operationId: user_user_request_password_reset_create
      description: Handle POST.
      tags:
      - user
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /user/user/sign-up:
    post:
      operationId: user_user_sign_up_create
      description: Handle POST.
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUp'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SignUp'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SignUp'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignUpError'
          description: ''
        '429':
          description: No response body
  /workspace/label/:
    post:
      operationId: workspace_label_create
      description: Create the label.
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /workspace/label/{label_uuid}:
    put:
      operationId: workspace_label_update
      description: Handle PUT.
      parameters:
      - in: path
        name: label_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: workspace_label_destroy
      description: Handle DELETE.
      parameters:
      - in: path
        name: label_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /workspace/project/:
    post:
      operationId: workspace_project_create
      description: Create a project.
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /workspace/project/{project_uuid}:
    get:
      operationId: workspace_project_retrieve
      description: Handle GET.
      parameters:
      - in: path
        name: project_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: workspace_project_update
      description: Handle PUT.
      parameters:
      - in: path
        name: project_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: workspace_project_destroy
      description: Handle DELETE.
      parameters:
      - in: path
        name: project_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /workspace/project/{project_uuid}/archive:
    post:
      operationId: workspace_project_archive_create
      description: Process request.
      parameters:
      - in: path
        name: project_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /workspace/section/:
    post:
      operationId: workspace_section_create
      description: Create a section.
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /workspace/section/{section_uuid}:
    get:
      operationId: workspace_section_retrieve
      description: Handle GET.
      parameters:
      - in: path
        name: section_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: workspace_section_update
      description: Update section.
      parameters:
      - in: path
        name: section_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: workspace_section_destroy
      description: Handle DELETE.
      parameters:
      - in: path
        name: section_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /workspace/section/{section_uuid}/move:
    post:
      operationId: workspace_section_move_create
      description: Process request.
      parameters:
      - in: path
        name: section_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /workspace/task/:
    post:
      operationId: workspace_task_create
      description: Handle POST.
      tags:
      - workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskCreateUpdate'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDetail'
          description: ''
        '400':
          description: No response body
  /workspace/task/{task_uuid}:
    get:
      operationId: workspace_task_retrieve
      description: Handle GET.
      parameters:
      - in: path
        name: task_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: workspace_task_update
      description: |-
        Override update behavior. Return using different serializer.

        The idea is that we accept abbreviated nested fields, but return
        the data whole. (ws board section, sub tasks, labels, etc.)
      parameters:
      - in: path
        name: task_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: workspace_task_destroy
      description: Delete task.
      parameters:
      - in: path
        name: task_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /workspace/task/{task_uuid}/move-after-task:
    post:
      operationId: workspace_task_move_after_task_create
      description: Process the request.
      parameters:
      - in: path
        name: task_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /workspace/task/{task_uuid}/move-to-section:
    post:
      operationId: workspace_task_move_to_section_create
      description: Process the request.
      parameters:
      - in: path
        name: task_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /workspace/team-member/{team_member_uuid}:
    get:
      operationId: workspace_team_member_retrieve
      description: Handle GET.
      parameters:
      - in: path
        name: team_member_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: workspace_team_member_update
      description: Handle PUT.
      parameters:
      - in: path
        name: team_member_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: workspace_team_member_destroy
      description: Handle DELETE.
      parameters:
      - in: path
        name: team_member_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /workspace/workspace/:
    post:
      operationId: workspace_workspace_create
      description: Create the workspace and add this user.
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /workspace/workspace/{workspace_uuid}:
    get:
      operationId: workspace_workspace_retrieve
      description: Handle GET.
      parameters:
      - in: path
        name: workspace_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: workspace_workspace_update
      description: Handle PUT.
      parameters:
      - in: path
        name: workspace_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /workspace/workspace/{workspace_uuid}/archived-projects/:
    get:
      operationId: workspace_workspace_archived_projects_retrieve
      description: Get queryset.
      parameters:
      - in: path
        name: workspace_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /workspace/workspace/{workspace_uuid}/invite-team-member:
    post:
      operationId: workspace_workspace_invite_team_member_create
      description: Handle POST.
      parameters:
      - in: path
        name: workspace_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /workspace/workspace/{workspace_uuid}/picture-upload:
    post:
      operationId: workspace_workspace_picture_upload_create
      description: Handle POST.
      parameters:
      - in: path
        name: workspace_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /workspace/workspace/{workspace_uuid}/uninvite-team-member:
    post:
      operationId: workspace_workspace_uninvite_team_member_create
      description: Handle POST.
      parameters:
      - in: path
        name: workspace_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /workspace/workspace/user-workspaces/:
    get:
      operationId: workspace_workspace_user_workspaces_retrieve
      description: Handle GET.
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
components:
  schemas:
    ChangePassword:
      type: object
      description: Accept old and new password.
      properties:
        current_password:
          type: string
        new_password:
          type: string
      required:
      - current_password
      - new_password
    ChangePasswordError:
      type: object
      description: These fields may be populated in a 400 response.
      properties:
        current_password:
          type: string
        new_password:
          type: string
        policies:
          type: array
          items:
            type: string
    ChatMessageBase:
      type: object
      description: ChatMessage model serializer.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        text:
          type: string
        author:
          allOf:
          - $ref: '#/components/schemas/TeamMemberBase'
          readOnly: true
      required:
      - author
      - created
      - modified
      - text
      - uuid
    LabelBase:
      type: object
      description: Label model serializer.
      properties:
        name:
          type: string
          maxLength: 255
        color:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Color index
        uuid:
          type: string
          format: uuid
          readOnly: true
      required:
      - color
      - name
      - uuid
    PasswordPolicies:
      type: object
      description: Serialize password policies.
      properties:
        policies:
          type: array
          items:
            type: string
      required:
      - policies
    ProjectUp:
      type: object
      description: |-
        Serialize project and workspace containing it.

        Used when serializing up from a task or ws board section.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        due_date:
          type: string
          format: date-time
          nullable: true
          description: Due date for this workspace board
        uuid:
          type: string
          format: uuid
          readOnly: true
        archived:
          type: string
          format: date-time
          nullable: true
          description: Archival timestamp of this workspace board.
        workspace:
          allOf:
          - $ref: '#/components/schemas/WorkspaceBase'
          readOnly: true
      required:
      - created
      - modified
      - title
      - uuid
      - workspace
    RoleEnum:
      enum:
      - OBSERVER
      - CONTRIBUTOR
      - MAINTAINER
      - OWNER
      type: string
      description: |-
        * `OBSERVER` - Observer
        * `CONTRIBUTOR` - Contributor
        * `MAINTAINER` - Maintainer
        * `OWNER` - Owner
    SectionUp:
      type: object
      description: Serialize section up the hierarchy.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        _order:
          type: integer
          readOnly: true
          title: ' order'
        uuid:
          type: string
          format: uuid
          readOnly: true
        project:
          allOf:
          - $ref: '#/components/schemas/ProjectUp'
          readOnly: true
      required:
      - _order
      - created
      - modified
      - project
      - title
      - uuid
    SignUp:
      type: object
      description: Take in email and password.
      properties:
        email:
          type: string
          format: email
        password:
          type: string
        tos_agreed:
          type: boolean
        privacy_policy_agreed:
          type: boolean
      required:
      - email
      - password
      - privacy_policy_agreed
      - tos_agreed
    SignUpError:
      type: object
      description: Hint for drf-spectacular.
      properties:
        email:
          type: string
        password:
          type: string
        policies:
          type: array
          items:
            type: string
        tos_agreed:
          type: string
        privacy_policy_agreed:
          type: string
    SubTaskBase:
      type: object
      description: SubTask model serializer.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        done:
          type: boolean
          description: Designate whether this sub task is done
        _order:
          type: integer
          readOnly: true
          title: ' order'
      required:
      - _order
      - created
      - modified
      - title
      - uuid
    SubTaskCreateUpdate:
      type: object
      description: A sub task serializer that accepts a missing UUID.
      properties:
        uuid:
          type: string
          format: uuid
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        done:
          type: boolean
          description: Designate whether this sub task is done
      required:
      - title
    TaskCreateUpdate:
      type: object
      description: |-
        Serialize update information for a task.

        Instead of serializing label and assignee, it accepts label uuids and
        assignee uuid and evaluates them.
      properties:
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        assignee:
          allOf:
          - $ref: '#/components/schemas/UuidObject'
          writeOnly: true
          nullable: true
        labels:
          type: array
          items:
            $ref: '#/components/schemas/UuidObject'
          writeOnly: true
        due_date:
          type: string
          format: date-time
          nullable: true
          description: Due date for this task
        section:
          allOf:
          - $ref: '#/components/schemas/UuidObject'
          writeOnly: true
        sub_tasks:
          type: array
          items:
            $ref: '#/components/schemas/SubTaskCreateUpdate'
      required:
      - assignee
      - due_date
      - labels
      - section
      - title
    TaskDetail:
      type: object
      description: |-
        Serialize all task details.

        Serializes up to the workspace in one direction, and all chat messages,
        labels and sub task in the other direction.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        _order:
          type: integer
          readOnly: true
          title: ' order'
        uuid:
          type: string
          format: uuid
          readOnly: true
        due_date:
          type: string
          format: date-time
          nullable: true
          description: Due date for this task
        number:
          type: integer
          readOnly: true
        sub_tasks:
          type: array
          items:
            $ref: '#/components/schemas/SubTaskBase'
          readOnly: true
        labels:
          type: array
          items:
            $ref: '#/components/schemas/LabelBase'
          readOnly: true
        assignee:
          allOf:
          - $ref: '#/components/schemas/TeamMemberBase'
          readOnly: true
        chat_messages:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessageBase'
          readOnly: true
        section:
          allOf:
          - $ref: '#/components/schemas/SectionUp'
          readOnly: true
      required:
      - _order
      - assignee
      - chat_messages
      - created
      - due_date
      - labels
      - modified
      - number
      - section
      - sub_tasks
      - title
      - uuid
    TeamMemberBase:
      type: object
      description: Team member serializer.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        role:
          $ref: '#/components/schemas/RoleEnum'
        job_title:
          type: string
          nullable: true
          maxLength: 255
      required:
      - created
      - job_title
      - modified
      - user
      - uuid
    User:
      type: object
      description: User serializer.
      properties:
        email:
          type: string
          format: email
          maxLength: 254
        preferred_name:
          type: string
          nullable: true
          maxLength: 255
        profile_picture:
          type: string
          nullable: true
          description: Return profile picture.
          readOnly: true
      required:
      - email
      - preferred_name
      - profile_picture
    UuidObject:
      type: object
      description: Deserialize the UUID for a any object with a UUID.
      properties:
        uuid:
          type: string
          format: uuid
      required:
      - uuid
    WorkspaceBase:
      type: object
      description: Workspace base serializer.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        picture:
          type: string
          nullable: true
          description: Return profile picture.
          readOnly: true
      required:
      - created
      - modified
      - picture
      - title
      - uuid
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
