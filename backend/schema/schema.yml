openapi: 3.0.3
info:
  title: Projectify backend API
  version: 1.0.0
  description: API for the Projectify project management software
paths:
  /corporate/stripe-webhook/:
    post:
      operationId: corporate_stripe_webhook_create
      description: Construct event type using data coming from stripe.
      tags:
      - corporate
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
        '400':
          description: No response body
        '500':
          description: No response body
  /corporate/workspace/{workspace_uuid}/create-billing-portal-session:
    post:
      operationId: corporate_workspace_create_billing_portal_session_create
      description: Handle POST.
      parameters:
      - in: path
        name: workspace_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - corporate
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceBillingPortalSessionCreateOutput'
          description: ''
        '404':
          description: No response body
  /corporate/workspace/{workspace_uuid}/create-checkout-session:
    post:
      operationId: corporate_workspace_create_checkout_session_create
      description: Handle POST.
      parameters:
      - in: path
        name: workspace_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - corporate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceCheckoutSessionCreateInput'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkspaceCheckoutSessionCreateInput'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkspaceCheckoutSessionCreateInput'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceCheckoutSessionCreateOutput'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                description: Error schema
                properties:
                  code:
                    type: integer
                    enum:
                    - 400
                  details:
                    type: object
                    description: Errors for WorkspaceCheckoutSessionCreateInputSerializer
                    properties:
                      seats:
                        type: string
                  general:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
                    enum:
                    - error
                required:
                - code
                - details
                - general
                - status
          description: ''
        '404':
          description: No response body
  /corporate/workspace/{workspace_uuid}/customer:
    get:
      operationId: corporate_workspace_customer_retrieve
      description: Handle GET.
      parameters:
      - in: path
        name: workspace_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - corporate
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
        '404':
          description: No response body
  /corporate/workspace/{workspace_uuid}/redeem-coupon:
    post:
      operationId: corporate_workspace_redeem_coupon_create
      description: Handle POST.
      parameters:
      - in: path
        name: workspace_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - corporate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouponRedeem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CouponRedeem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CouponRedeem'
        required: true
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                description: Error schema
                properties:
                  code:
                    type: integer
                    enum:
                    - 400
                  details:
                    type: object
                    description: Errors for CouponRedeemSerializer
                    properties:
                      code:
                        type: string
                  general:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
                    enum:
                    - error
                required:
                - code
                - details
                - general
                - status
          description: ''
  /user/user/change-password:
    post:
      operationId: user_user_change_password_create
      description: Handle POST.
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePassword'
        required: true
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                description: Error schema
                properties:
                  code:
                    type: integer
                    enum:
                    - 400
                  details:
                    type: object
                    description: Errors for ChangePasswordSerializer
                    properties:
                      current_password:
                        type: string
                      new_password:
                        type: string
                  general:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
                    enum:
                    - error
                required:
                - code
                - details
                - general
                - status
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequests'
          description: ''
  /user/user/confirm-email:
    post:
      operationId: user_user_confirm_email_create
      description: Handle POST.
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfirmEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfirmEmail'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                description: Error schema
                properties:
                  code:
                    type: integer
                    enum:
                    - 400
                  details:
                    type: object
                    description: Errors for ConfirmEmailSerializer
                    properties:
                      email:
                        type: string
                      token:
                        type: string
                  general:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
                    enum:
                    - error
                required:
                - code
                - details
                - general
                - status
          description: ''
  /user/user/confirm-password-reset:
    post:
      operationId: user_user_confirm_password_reset_create
      description: Handle POST.
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                description: Error schema
                properties:
                  code:
                    type: integer
                    enum:
                    - 400
                  details:
                    type: object
                    description: Errors for PasswordResetConfirmSerializer
                    properties:
                      email:
                        type: string
                      token:
                        type: string
                      new_password:
                        type: string
                  general:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
                    enum:
                    - error
                required:
                - code
                - details
                - general
                - status
          description: ''
  /user/user/current-user:
    get:
      operationId: user_user_current_user_retrieve
      description: Handle GET.
      tags:
      - user
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_info'
          description: ''
    put:
      operationId: user_user_current_user_update
      description: Update a user.
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                description: Error schema
                properties:
                  code:
                    type: integer
                    enum:
                    - 400
                  details:
                    type: object
                    description: Errors for UserUpdateSerializer
                    properties:
                      preferred_name:
                        type: string
                  general:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
                    enum:
                    - error
                required:
                - code
                - details
                - general
                - status
          description: ''
        '403':
          description: No response body
  /user/user/email-address-update/confirm:
    post:
      operationId: user_user_email_address_update_confirm_create
      description: Handle POST.
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmEmailAddressUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfirmEmailAddressUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfirmEmailAddressUpdate'
        required: true
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                description: Error schema
                properties:
                  code:
                    type: integer
                    enum:
                    - 400
                  details:
                    type: object
                    description: Errors for ConfirmEmailAddressUpdateSerializer
                    properties:
                      confirmation_token:
                        type: string
                  general:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
                    enum:
                    - error
                required:
                - code
                - details
                - general
                - status
          description: ''
  /user/user/email-address-update/request:
    post:
      operationId: user_user_email_address_update_request_create
      description: Handle POST.
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEmailAddressUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestEmailAddressUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequestEmailAddressUpdate'
        required: true
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                description: Error schema
                properties:
                  code:
                    type: integer
                    enum:
                    - 400
                  details:
                    type: object
                    description: Errors for RequestEmailAddressUpdateSerializer
                    properties:
                      password:
                        type: string
                      new_email:
                        type: string
                  general:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
                    enum:
                    - error
                required:
                - code
                - details
                - general
                - status
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequests'
          description: ''
  /user/user/log-in:
    post:
      operationId: user_user_log_in_create
      description: Handle POST.
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogIn'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LogIn'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LogIn'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                description: Error schema
                properties:
                  code:
                    type: integer
                    enum:
                    - 400
                  details:
                    type: object
                    description: Errors for LogInSerializer
                    properties:
                      email:
                        type: string
                      password:
                        type: string
                  general:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
                    enum:
                    - error
                required:
                - code
                - details
                - general
                - status
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequests'
          description: ''
  /user/user/log-out:
    post:
      operationId: user_user_log_out_create
      description: Handle POST.
      tags:
      - user
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /user/user/password-policy:
    get:
      operationId: user_user_password_policy_retrieve
      description: Return all information about current password policy.
      tags:
      - user
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordPolicies'
          description: ''
  /user/user/profile-picture/upload:
    post:
      operationId: user_user_profile_picture_upload_create
      description: Handle POST.
      tags:
      - user
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProfilePictureUpload'
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                description: Error schema
                properties:
                  code:
                    type: integer
                    enum:
                    - 400
                  details:
                    type: object
                    description: Errors for ProfilePictureUploadSerializer
                    properties:
                      file:
                        type: string
                  general:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
                    enum:
                    - error
                required:
                - code
                - details
                - general
                - status
          description: ''
  /user/user/request-password-reset:
    post:
      operationId: user_user_request_password_reset_create
      description: Handle POST.
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                description: Error schema
                properties:
                  code:
                    type: integer
                    enum:
                    - 400
                  details:
                    type: object
                    description: Errors for PasswordResetRequestSerializer
                    properties:
                      email:
                        type: string
                  general:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
                    enum:
                    - error
                required:
                - code
                - details
                - general
                - status
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequests'
          description: ''
  /user/user/sign-up:
    post:
      operationId: user_user_sign_up_create
      description: Handle POST.
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUp'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SignUp'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SignUp'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                description: Error schema
                properties:
                  code:
                    type: integer
                    enum:
                    - 400
                  details:
                    type: object
                    description: Errors for SignUpSerializer
                    properties:
                      email:
                        type: string
                      password:
                        type: string
                      tos_agreed:
                        type: string
                      privacy_policy_agreed:
                        type: string
                  general:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
                    enum:
                    - error
                required:
                - code
                - details
                - general
                - status
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequests'
          description: ''
  /workspace/label/:
    post:
      operationId: workspace_label_create
      description: Create the label.
      tags:
      - workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LabelCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LabelCreate'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelBase'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                description: Error schema
                properties:
                  code:
                    type: integer
                    enum:
                    - 400
                  details:
                    type: object
                    description: Errors for LabelCreateSerializer
                    properties:
                      name:
                        type: string
                      color:
                        type: string
                      workspace_uuid:
                        type: string
                  general:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
                    enum:
                    - error
                required:
                - code
                - details
                - general
                - status
          description: ''
  /workspace/label/{label_uuid}:
    put:
      operationId: workspace_label_update
      description: Handle PUT.
      parameters:
      - in: path
        name: label_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LabelUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LabelUpdate'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelBase'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                description: Error schema
                properties:
                  code:
                    type: integer
                    enum:
                    - 400
                  details:
                    type: object
                    description: Errors for LabelUpdateSerializer
                    properties:
                      name:
                        type: string
                      color:
                        type: string
                  general:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
                    enum:
                    - error
                required:
                - code
                - details
                - general
                - status
          description: ''
        '404':
          description: No response body
    delete:
      operationId: workspace_label_destroy
      description: Handle DELETE.
      parameters:
      - in: path
        name: label_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
        '404':
          description: No response body
  /workspace/project/:
    post:
      operationId: workspace_project_create
      description: Create a project.
      tags:
      - workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectCreate'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDetail'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                description: Error schema
                properties:
                  code:
                    type: integer
                    enum:
                    - 400
                  details:
                    type: object
                    description: Errors for ProjectCreateSerializer
                    properties:
                      title:
                        type: string
                      description:
                        type: string
                      workspace_uuid:
                        type: string
                      due_date:
                        type: string
                  general:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
                    enum:
                    - error
                required:
                - code
                - details
                - general
                - status
          description: ''
  /workspace/project/{project_uuid}:
    get:
      operationId: workspace_project_retrieve
      description: Handle GET.
      parameters:
      - in: path
        name: project_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDetail'
          description: ''
        '404':
          description: No response body
    put:
      operationId: workspace_project_update
      description: Handle PUT.
      parameters:
      - in: path
        name: project_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectUpdate'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectUpdate'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                description: Error schema
                properties:
                  code:
                    type: integer
                    enum:
                    - 400
                  details:
                    type: object
                    description: Errors for ProjectUpdateSerializer
                    properties:
                      title:
                        type: string
                      description:
                        type: string
                      due_date:
                        type: string
                  general:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
                    enum:
                    - error
                required:
                - code
                - details
                - general
                - status
          description: ''
    delete:
      operationId: workspace_project_destroy
      description: Handle DELETE.
      parameters:
      - in: path
        name: project_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
        '404':
          description: No response body
  /workspace/project/{project_uuid}/archive:
    post:
      operationId: workspace_project_archive_create
      description: Process request.
      parameters:
      - in: path
        name: project_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectArchive'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectArchive'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectArchive'
        required: true
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
        '404':
          description: No response body
        '403':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                description: Error schema
                properties:
                  code:
                    type: integer
                    enum:
                    - 400
                  details:
                    type: object
                    description: Errors for ProjectArchiveSerializer
                    properties:
                      archived:
                        type: string
                  general:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
                    enum:
                    - error
                required:
                - code
                - details
                - general
                - status
          description: ''
  /workspace/section/:
    post:
      operationId: workspace_section_create
      description: Create a section.
      tags:
      - workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SectionCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SectionCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SectionCreate'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionCreate'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                description: Error schema
                properties:
                  code:
                    type: integer
                    enum:
                    - 400
                  details:
                    type: object
                    description: Errors for SectionCreateSerializer
                    properties:
                      title:
                        type: string
                      description:
                        type: string
                      project_uuid:
                        type: string
                  general:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
                    enum:
                    - error
                required:
                - code
                - details
                - general
                - status
          description: ''
        '404':
          description: No response body
  /workspace/section/{section_uuid}:
    get:
      operationId: workspace_section_retrieve
      description: Handle GET.
      parameters:
      - in: path
        name: section_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionDetail'
          description: ''
        '404':
          description: No response body
    put:
      operationId: workspace_section_update
      description: Update section.
      parameters:
      - in: path
        name: section_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SectionUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SectionUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SectionUpdate'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionUpdate'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                description: Error schema
                properties:
                  code:
                    type: integer
                    enum:
                    - 400
                  details:
                    type: object
                    description: Errors for SectionUpdateSerializer
                    properties:
                      title:
                        type: string
                      description:
                        type: string
                  general:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
                    enum:
                    - error
                required:
                - code
                - details
                - general
                - status
          description: ''
        '404':
          description: No response body
    delete:
      operationId: workspace_section_destroy
      description: Handle DELETE.
      parameters:
      - in: path
        name: section_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
        '404':
          description: No response body
  /workspace/section/{section_uuid}/move:
    post:
      operationId: workspace_section_move_create
      description: Process request.
      parameters:
      - in: path
        name: section_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SectionMove'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SectionMove'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SectionMove'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                description: Error schema
                properties:
                  code:
                    type: integer
                    enum:
                    - 400
                  details:
                    type: object
                    description: Errors for SectionMoveSerializer
                    properties:
                      order:
                        type: string
                  general:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
                    enum:
                    - error
                required:
                - code
                - details
                - general
                - status
          description: ''
        '404':
          description: No response body
  /workspace/task/:
    post:
      operationId: workspace_task_create
      description: Handle POST.
      tags:
      - workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskCreate'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDetail'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                description: Error schema
                properties:
                  code:
                    type: integer
                    enum:
                    - 400
                  details:
                    type: object
                    description: Errors for TaskCreateSerializer
                    properties:
                      title:
                        type: string
                      description:
                        type: string
                      assignee:
                        type: object
                        description: Errors for UuidObjectSerializer
                        properties:
                          uuid:
                            type: string
                      labels:
                        type: array
                        items:
                          type: object
                          description: Errors for UuidObjectSerializer
                          properties:
                            uuid:
                              type: string
                      due_date:
                        type: string
                      sub_tasks:
                        type: array
                        items:
                          type: object
                          description: Errors for SubTaskCreateUpdateSerializer
                          properties:
                            uuid:
                              type: string
                            title:
                              type: string
                            description:
                              type: string
                            done:
                              type: string
                      section:
                        type: object
                        description: Errors for UuidObjectSerializer
                        properties:
                          uuid:
                            type: string
                  general:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
                    enum:
                    - error
                required:
                - code
                - details
                - general
                - status
          description: ''
  /workspace/task/{task_uuid}:
    get:
      operationId: workspace_task_retrieve
      description: Handle GET.
      parameters:
      - in: path
        name: task_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDetail'
          description: ''
        '404':
          description: No response body
    put:
      operationId: workspace_task_update
      description: |-
        Override update behavior. Return using different serializer.

        The idea is that we accept abbreviated nested fields, but return
        the data whole. (ws board section, sub tasks, labels, etc.)
      parameters:
      - in: path
        name: task_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskUpdate'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDetail'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                description: Error schema
                properties:
                  code:
                    type: integer
                    enum:
                    - 400
                  details:
                    type: object
                    description: Errors for TaskUpdateSerializer
                    properties:
                      title:
                        type: string
                      description:
                        type: string
                      assignee:
                        type: object
                        description: Errors for UuidObjectSerializer
                        properties:
                          uuid:
                            type: string
                      labels:
                        type: array
                        items:
                          type: object
                          description: Errors for UuidObjectSerializer
                          properties:
                            uuid:
                              type: string
                      due_date:
                        type: string
                      sub_tasks:
                        type: array
                        items:
                          type: object
                          description: Errors for SubTaskCreateUpdateSerializer
                          properties:
                            uuid:
                              type: string
                            title:
                              type: string
                            description:
                              type: string
                            done:
                              type: string
                  general:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
                    enum:
                    - error
                required:
                - code
                - details
                - general
                - status
          description: ''
        '404':
          description: No response body
    delete:
      operationId: workspace_task_destroy
      description: Delete task.
      parameters:
      - in: path
        name: task_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
        '404':
          description: No response body
  /workspace/task/{task_uuid}/move-after-task:
    post:
      operationId: workspace_task_move_after_task_create
      description: Process the request.
      parameters:
      - in: path
        name: task_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskMoveAfterTask'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskMoveAfterTask'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskMoveAfterTask'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDetail'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                description: Error schema
                properties:
                  code:
                    type: integer
                    enum:
                    - 400
                  details:
                    type: object
                    description: Errors for TaskMoveAfterTaskSerializer
                    properties:
                      task_uuid:
                        type: string
                  general:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
                    enum:
                    - error
                required:
                - code
                - details
                - general
                - status
          description: ''
        '404':
          description: No response body
  /workspace/task/{task_uuid}/move-to-section:
    post:
      operationId: workspace_task_move_to_section_create
      description: Process the request.
      parameters:
      - in: path
        name: task_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskMoveToSection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskMoveToSection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskMoveToSection'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDetail'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                description: Error schema
                properties:
                  code:
                    type: integer
                    enum:
                    - 400
                  details:
                    type: object
                    description: Errors for TaskMoveToSectionSerializer
                    properties:
                      section_uuid:
                        type: string
                  general:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
                    enum:
                    - error
                required:
                - code
                - details
                - general
                - status
          description: ''
        '404':
          description: No response body
  /workspace/team-member/{team_member_uuid}:
    get:
      operationId: workspace_team_member_retrieve
      description: Handle GET.
      parameters:
      - in: path
        name: team_member_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMemberBase'
          description: ''
        '404':
          description: No response body
    put:
      operationId: workspace_team_member_update
      description: Handle PUT.
      parameters:
      - in: path
        name: team_member_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamMemberUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TeamMemberUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TeamMemberUpdate'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMemberUpdate'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                description: Error schema
                properties:
                  code:
                    type: integer
                    enum:
                    - 400
                  details:
                    type: object
                    description: Errors for TeamMemberUpdateSerializer
                    properties:
                      job_title:
                        type: string
                      role:
                        type: string
                  general:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
                    enum:
                    - error
                required:
                - code
                - details
                - general
                - status
          description: ''
        '404':
          description: No response body
    delete:
      operationId: workspace_team_member_destroy
      description: Handle DELETE.
      parameters:
      - in: path
        name: team_member_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
        '404':
          description: No response body
  /workspace/workspace/:
    post:
      operationId: workspace_workspace_create
      description: Create the workspace and add this user.
      tags:
      - workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkspaceCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkspaceCreate'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceBase'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                description: Error schema
                properties:
                  code:
                    type: integer
                    enum:
                    - 400
                  details:
                    type: object
                    description: Errors for WorkspaceCreateSerializer
                    properties:
                      title:
                        type: string
                      description:
                        type: string
                  general:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
                    enum:
                    - error
                required:
                - code
                - details
                - general
                - status
          description: ''
  /workspace/workspace/{workspace_uuid}:
    get:
      operationId: workspace_workspace_retrieve
      description: Handle GET.
      parameters:
      - in: path
        name: workspace_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceDetail'
          description: ''
        '404':
          description: No response body
    put:
      operationId: workspace_workspace_update
      description: Handle PUT.
      parameters:
      - in: path
        name: workspace_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkspaceUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkspaceUpdate'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceUpdate'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                description: Error schema
                properties:
                  code:
                    type: integer
                    enum:
                    - 400
                  details:
                    type: object
                    description: Errors for WorkspaceUpdateSerializer
                    properties:
                      title:
                        type: string
                      description:
                        type: string
                  general:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
                    enum:
                    - error
                required:
                - code
                - details
                - general
                - status
          description: ''
        '404':
          description: No response body
  /workspace/workspace/{workspace_uuid}/archived-projects/:
    get:
      operationId: workspace_workspace_archived_projects_list
      description: Get queryset.
      parameters:
      - in: path
        name: workspace_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectBase'
          description: ''
        '404':
          description: No response body
  /workspace/workspace/{workspace_uuid}/invite-team-member:
    post:
      operationId: workspace_workspace_invite_team_member_create
      description: Handle POST.
      parameters:
      - in: path
        name: workspace_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteUserToWorkspace'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InviteUserToWorkspace'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InviteUserToWorkspace'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteUserToWorkspace'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                description: Error schema
                properties:
                  code:
                    type: integer
                    enum:
                    - 400
                  details:
                    type: object
                    description: Errors for InviteUserToWorkspaceSerializer
                    properties:
                      email:
                        type: string
                  general:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
                    enum:
                    - error
                required:
                - code
                - details
                - general
                - status
          description: ''
        '404':
          description: No response body
  /workspace/workspace/{workspace_uuid}/picture-upload:
    post:
      operationId: workspace_workspace_picture_upload_create
      description: Handle POST.
      parameters:
      - in: path
        name: workspace_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkspacePictureUpload'
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                description: Error schema
                properties:
                  code:
                    type: integer
                    enum:
                    - 400
                  details:
                    type: object
                    description: Errors for WorkspacePictureUploadSerializer
                    properties:
                      file:
                        type: string
                  general:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
                    enum:
                    - error
                required:
                - code
                - details
                - general
                - status
          description: ''
        '404':
          description: No response body
  /workspace/workspace/{workspace_uuid}/uninvite-team-member:
    post:
      operationId: workspace_workspace_uninvite_team_member_create
      description: Handle POST.
      parameters:
      - in: path
        name: workspace_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UninviteUserFromWorkspace'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UninviteUserFromWorkspace'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UninviteUserFromWorkspace'
        required: true
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                description: Error schema
                properties:
                  code:
                    type: integer
                    enum:
                    - 400
                  details:
                    type: object
                    description: Errors for UninviteUserFromWorkspaceSerializer
                    properties:
                      email:
                        type: string
                  general:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
                    enum:
                    - error
                required:
                - code
                - details
                - general
                - status
          description: ''
        '404':
          description: No response body
  /workspace/workspace/user-workspaces/:
    get:
      operationId: workspace_workspace_user_workspaces_list
      description: Handle GET.
      tags:
      - workspace
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkspaceBase'
          description: ''
components:
  schemas:
    AnonymousUser:
      type: object
      description: Serialize anonymous user.
      properties:
        unauthenticated:
          $ref: '#/components/schemas/UnauthenticatedEnum'
      required:
      - unauthenticated
    ChangePassword:
      type: object
      description: Accept old and new password.
      properties:
        current_password:
          type: string
        new_password:
          type: string
      required:
      - current_password
      - new_password
    ChatMessageBase:
      type: object
      description: ChatMessage model serializer.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        text:
          type: string
        author:
          allOf:
          - $ref: '#/components/schemas/TeamMemberBase'
          readOnly: true
      required:
      - author
      - created
      - modified
      - text
      - uuid
    CodeEnum:
      enum:
      - 429
      type: integer
      description: '* `429` - 429'
    ConfirmEmail:
      type: object
      description: Take email and password.
      properties:
        email:
          type: string
          format: email
        token:
          type: string
      required:
      - email
      - token
    ConfirmEmailAddressUpdate:
      type: object
      description: Accept new email.
      properties:
        confirmation_token:
          type: string
      required:
      - confirmation_token
    CouponRedeem:
      type: object
      description: Serializer that takes in a Coupon's code.
      properties:
        code:
          type: string
      required:
      - code
    Customer:
      type: object
      description: Serializer for customer.
      properties:
        seats:
          type: integer
          maximum: 2147483647
          minimum: 0
        uuid:
          type: string
          format: uuid
          readOnly: true
        subscription_status:
          $ref: '#/components/schemas/SubscriptionStatusEnum'
      required:
      - seats
      - subscription_status
      - uuid
    InviteUserToWorkspace:
      type: object
      description: Accept email.
      properties:
        email:
          type: string
          format: email
      required:
      - email
    LabelBase:
      type: object
      description: Label model serializer.
      properties:
        name:
          type: string
          maxLength: 255
        color:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Color index
        uuid:
          type: string
          format: uuid
          readOnly: true
      required:
      - color
      - name
      - uuid
    LabelCreate:
      type: object
      description: Serializer for label creation.
      properties:
        name:
          type: string
          maxLength: 255
        color:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Color index
        workspace_uuid:
          type: string
          format: uuid
      required:
      - color
      - name
      - workspace_uuid
    LabelUpdate:
      type: object
      description: Serializer for Label update.
      properties:
        name:
          type: string
          maxLength: 255
        color:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Color index
      required:
      - color
      - name
    LogIn:
      type: object
      description: Take email and password.
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - email
      - password
    PasswordPolicies:
      type: object
      description: Serialize password policies.
      properties:
        policies:
          type: array
          items:
            type: string
      required:
      - policies
    PasswordResetConfirm:
      type: object
      description: Take email, token and a new password.
      properties:
        email:
          type: string
          format: email
        token:
          type: string
        new_password:
          type: string
      required:
      - email
      - new_password
      - token
    PasswordResetRequest:
      type: object
      description: Take an email address.
      properties:
        email:
          type: string
          format: email
      required:
      - email
    ProfilePictureUpload:
      type: object
      description: Deserialize picture upload.
      properties:
        file:
          type: string
          format: uri
    ProjectArchive:
      type: object
      description: Accept the desired archival status.
      properties:
        archived:
          type: boolean
      required:
      - archived
    ProjectBase:
      type: object
      description: Project base serializer.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        due_date:
          type: string
          format: date-time
          nullable: true
          description: Due date for this workspace board
        uuid:
          type: string
          format: uuid
          readOnly: true
        archived:
          type: string
          format: date-time
          nullable: true
          description: Archival timestamp of this workspace board.
      required:
      - archived
      - created
      - description
      - due_date
      - modified
      - title
      - uuid
    ProjectCreate:
      type: object
      description: Parse project creation input.
      properties:
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        workspace_uuid:
          type: string
          format: uuid
        due_date:
          type: string
          format: date-time
          nullable: true
          description: Due date for this workspace board
      required:
      - title
      - workspace_uuid
    ProjectDetail:
      type: object
      description: |-
        Project serializer.

        Serializes in both directions, workspace and sections, including their
        tasks.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        due_date:
          type: string
          format: date-time
          nullable: true
          description: Due date for this workspace board
        uuid:
          type: string
          format: uuid
          readOnly: true
        archived:
          type: string
          format: date-time
          nullable: true
          description: Archival timestamp of this workspace board.
        sections:
          type: array
          items:
            $ref: '#/components/schemas/ProjectDetailSection'
          readOnly: true
        workspace:
          allOf:
          - $ref: '#/components/schemas/WorkspaceBase'
          readOnly: true
      required:
      - archived
      - created
      - description
      - due_date
      - modified
      - sections
      - title
      - uuid
      - workspace
    ProjectDetailSection:
      type: object
      description: Reduced section serializer.
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        _order:
          type: integer
          readOnly: true
          title: ' order'
        title:
          type: string
          maxLength: 255
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/ProjectDetailTask'
          readOnly: true
        description:
          type: string
          nullable: true
      required:
      - _order
      - description
      - tasks
      - title
      - uuid
    ProjectDetailTask:
      type: object
      description: Serialize all task details.
      properties:
        title:
          type: string
          maxLength: 255
        uuid:
          type: string
          format: uuid
          readOnly: true
        due_date:
          type: string
          format: date-time
          nullable: true
          description: Due date for this task
        number:
          type: integer
          maximum: 2147483647
          minimum: 0
        labels:
          type: array
          items:
            $ref: '#/components/schemas/LabelBase'
          readOnly: true
        assignee:
          allOf:
          - $ref: '#/components/schemas/TeamMemberBase'
          readOnly: true
          nullable: true
        sub_tasks:
          type: array
          items:
            $ref: '#/components/schemas/SubTaskBase'
          readOnly: true
        description:
          type: string
          nullable: true
      required:
      - assignee
      - description
      - due_date
      - labels
      - number
      - sub_tasks
      - title
      - uuid
    ProjectUp:
      type: object
      description: |-
        Serialize project and workspace containing it.

        Used when serializing up from a task or ws board section.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        due_date:
          type: string
          format: date-time
          nullable: true
          description: Due date for this workspace board
        uuid:
          type: string
          format: uuid
          readOnly: true
        archived:
          type: string
          format: date-time
          nullable: true
          description: Archival timestamp of this workspace board.
        workspace:
          allOf:
          - $ref: '#/components/schemas/WorkspaceBase'
          readOnly: true
      required:
      - archived
      - created
      - description
      - due_date
      - modified
      - title
      - uuid
      - workspace
    ProjectUpdate:
      type: object
      description: Serializer for PUT.
      properties:
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        due_date:
          type: string
          format: date-time
          nullable: true
          description: Due date for this workspace board
      required:
      - title
    RequestEmailAddressUpdate:
      type: object
      description: Accept new email.
      properties:
        password:
          type: string
        new_email:
          type: string
          format: email
      required:
      - new_email
      - password
    RoleEnum:
      enum:
      - OBSERVER
      - CONTRIBUTOR
      - MAINTAINER
      - OWNER
      type: string
      description: |-
        * `OBSERVER` - Observer
        * `CONTRIBUTOR` - Contributor
        * `MAINTAINER` - Maintainer
        * `OWNER` - Owner
    SectionCreate:
      type: object
      description: Parse section creation input.
      properties:
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        project_uuid:
          type: string
          format: uuid
      required:
      - project_uuid
      - title
    SectionDetail:
      type: object
      description: |-
        Section detail serializer.

        Goes both up (to workspace) and down (all tasks).
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        _order:
          type: integer
          readOnly: true
          title: ' order'
        uuid:
          type: string
          format: uuid
          readOnly: true
        project:
          allOf:
          - $ref: '#/components/schemas/ProjectUp'
          readOnly: true
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/TaskWithSubTask'
          readOnly: true
      required:
      - _order
      - created
      - description
      - modified
      - project
      - tasks
      - title
      - uuid
    SectionMove:
      type: object
      description: Accept the desired position within project.
      properties:
        order:
          type: integer
      required:
      - order
    SectionUp:
      type: object
      description: Serialize section up the hierarchy.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        _order:
          type: integer
          readOnly: true
          title: ' order'
        uuid:
          type: string
          format: uuid
          readOnly: true
        project:
          allOf:
          - $ref: '#/components/schemas/ProjectUp'
          readOnly: true
      required:
      - _order
      - created
      - description
      - modified
      - project
      - title
      - uuid
    SectionUpdate:
      type: object
      description: Input serializer for PUT.
      properties:
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
      required:
      - title
    SignUp:
      type: object
      description: Take in email and password.
      properties:
        email:
          type: string
          format: email
        password:
          type: string
        tos_agreed:
          type: boolean
        privacy_policy_agreed:
          type: boolean
      required:
      - email
      - password
      - privacy_policy_agreed
      - tos_agreed
    SingleQuota:
      type: object
      description: Serializer a single Quota dataclass.
      properties:
        current:
          type: integer
          nullable: true
        limit:
          type: integer
          nullable: true
        can_create_more:
          type: boolean
      required:
      - can_create_more
      - current
      - limit
    StatusEnum:
      enum:
      - error
      type: string
      description: '* `error` - error'
    SubTaskBase:
      type: object
      description: SubTask model serializer.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        done:
          type: boolean
          description: Designate whether this sub task is done
        _order:
          type: integer
          readOnly: true
          title: ' order'
      required:
      - _order
      - created
      - description
      - done
      - modified
      - title
      - uuid
    SubTaskCreateUpdate:
      type: object
      description: A sub task serializer that accepts a missing UUID.
      properties:
        uuid:
          type: string
          format: uuid
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        done:
          type: boolean
          description: Designate whether this sub task is done
      required:
      - title
    SubscriptionStatusEnum:
      enum:
      - ACTIVE
      - UNPAID
      - CANCELLED
      - CUSTOM
      type: string
      description: |-
        * `ACTIVE` - Active
        * `UNPAID` - Unpaid
        * `CANCELLED` - Cancelled
        * `CUSTOM` - Custom subscription
    TaskCreate:
      type: object
      description: Serializer for creating tasks.
      properties:
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        assignee:
          allOf:
          - $ref: '#/components/schemas/UuidObject'
          nullable: true
        labels:
          type: array
          items:
            $ref: '#/components/schemas/UuidObject'
          writeOnly: true
        due_date:
          type: string
          format: date-time
          nullable: true
          description: Due date for this task
        sub_tasks:
          type: array
          items:
            $ref: '#/components/schemas/SubTaskCreateUpdate'
        section:
          $ref: '#/components/schemas/UuidObject'
      required:
      - assignee
      - description
      - due_date
      - labels
      - section
      - title
    TaskDetail:
      type: object
      description: |-
        Serialize all task details.

        Serializes up to the workspace in one direction, and all chat messages,
        labels and sub task in the other direction.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        _order:
          type: integer
          readOnly: true
          title: ' order'
        uuid:
          type: string
          format: uuid
          readOnly: true
        due_date:
          type: string
          format: date-time
          nullable: true
          description: Due date for this task
        number:
          type: integer
          readOnly: true
        sub_tasks:
          type: array
          items:
            $ref: '#/components/schemas/SubTaskBase'
          readOnly: true
        labels:
          type: array
          items:
            $ref: '#/components/schemas/LabelBase'
          readOnly: true
        assignee:
          allOf:
          - $ref: '#/components/schemas/TeamMemberBase'
          readOnly: true
          nullable: true
        chat_messages:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessageBase'
          readOnly: true
        section:
          allOf:
          - $ref: '#/components/schemas/SectionUp'
          readOnly: true
      required:
      - _order
      - assignee
      - chat_messages
      - created
      - description
      - due_date
      - labels
      - modified
      - number
      - section
      - sub_tasks
      - title
      - uuid
    TaskMoveAfterTask:
      type: object
      description: Accept a task uuid after which this task should be moved.
      properties:
        task_uuid:
          type: string
          format: uuid
      required:
      - task_uuid
    TaskMoveToSection:
      type: object
      description: Accept the target section uuid.
      properties:
        section_uuid:
          type: string
          format: uuid
      required:
      - section_uuid
    TaskUpdate:
      type: object
      description: Serializer for updating tasks.
      properties:
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        assignee:
          allOf:
          - $ref: '#/components/schemas/UuidObject'
          nullable: true
        labels:
          type: array
          items:
            $ref: '#/components/schemas/UuidObject'
          writeOnly: true
        due_date:
          type: string
          format: date-time
          nullable: true
          description: Due date for this task
        sub_tasks:
          type: array
          items:
            $ref: '#/components/schemas/SubTaskCreateUpdate'
      required:
      - assignee
      - description
      - due_date
      - labels
      - title
    TaskWithSubTask:
      type: object
      description: Serialize all task details.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        _order:
          type: integer
          readOnly: true
          title: ' order'
        uuid:
          type: string
          format: uuid
          readOnly: true
        due_date:
          type: string
          format: date-time
          nullable: true
          description: Due date for this task
        number:
          type: integer
          readOnly: true
        sub_tasks:
          type: array
          items:
            $ref: '#/components/schemas/SubTaskBase'
          readOnly: true
        labels:
          type: array
          items:
            $ref: '#/components/schemas/LabelBase'
          readOnly: true
        assignee:
          allOf:
          - $ref: '#/components/schemas/TeamMemberBase'
          readOnly: true
          nullable: true
      required:
      - _order
      - assignee
      - created
      - description
      - due_date
      - labels
      - modified
      - number
      - sub_tasks
      - title
      - uuid
    TeamMemberBase:
      type: object
      description: Team member serializer.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        role:
          $ref: '#/components/schemas/RoleEnum'
        job_title:
          type: string
          nullable: true
          maxLength: 255
      required:
      - created
      - job_title
      - modified
      - role
      - user
      - uuid
    TeamMemberInvite:
      type: object
      description: Serializer team member invites.
      properties:
        email:
          type: string
          format: email
        created:
          type: string
          format: date-time
      required:
      - created
      - email
    TeamMemberUpdate:
      type: object
      description: Serializer for PUT updates.
      properties:
        job_title:
          type: string
          nullable: true
          maxLength: 255
        role:
          $ref: '#/components/schemas/RoleEnum'
    TooManyRequests:
      type: object
      description: Serialize 429 too many requests error.
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          default: error
        code:
          $ref: '#/components/schemas/CodeEnum'
      required:
      - code
    UnauthenticatedEnum:
      enum:
      - true
      type: boolean
      description: '* `True` - True'
    UninviteUserFromWorkspace:
      type: object
      description: Accept email.
      properties:
        email:
          type: string
          format: email
      required:
      - email
    User:
      type: object
      description: User serializer.
      properties:
        email:
          type: string
          format: email
          maxLength: 254
        preferred_name:
          type: string
          nullable: true
          maxLength: 255
        profile_picture:
          type: string
          nullable: true
          description: Return profile picture.
          readOnly: true
      required:
      - email
      - preferred_name
      - profile_picture
    UserUpdate:
      type: object
      description: Take only preferred_name in.
      properties:
        preferred_name:
          type: string
          nullable: true
          maxLength: 255
    UuidObject:
      type: object
      description: Deserialize the UUID for a any object with a UUID.
      properties:
        uuid:
          type: string
          format: uuid
      required:
      - uuid
    WorkspaceBase:
      type: object
      description: Workspace base serializer.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        picture:
          type: string
          nullable: true
          description: Return profile picture.
          readOnly: true
      required:
      - created
      - description
      - modified
      - picture
      - title
      - uuid
    WorkspaceBillingPortalSessionCreateOutput:
      type: object
      description: Return the url to a billing portal session.
      properties:
        url:
          type: string
          format: uri
      required:
      - url
    WorkspaceCheckoutSessionCreateInput:
      type: object
      description: Accept a number of seats to be added into checkout.
      properties:
        seats:
          type: integer
          minimum: 1
      required:
      - seats
    WorkspaceCheckoutSessionCreateOutput:
      type: object
      description: Return the url to a checkout session.
      properties:
        url:
          type: string
          format: uri
      required:
      - url
    WorkspaceCreate:
      type: object
      description: Accept title, description.
      properties:
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
      required:
      - title
    WorkspaceDetail:
      type: object
      description: |-
        Workspace detail serializer.

        Serializers ws board as well, but not the sections and so forth that they
        contain.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        picture:
          type: string
          nullable: true
          description: Return profile picture.
          readOnly: true
        team_members:
          type: array
          items:
            $ref: '#/components/schemas/TeamMemberBase'
          readOnly: true
        team_member_invites:
          type: array
          items:
            $ref: '#/components/schemas/TeamMemberInvite'
          readOnly: true
        projects:
          type: array
          items:
            $ref: '#/components/schemas/ProjectBase'
          readOnly: true
        labels:
          type: array
          items:
            $ref: '#/components/schemas/LabelBase'
          readOnly: true
        quota:
          $ref: '#/components/schemas/WorkspaceQuota'
      required:
      - created
      - description
      - labels
      - modified
      - picture
      - projects
      - quota
      - team_member_invites
      - team_members
      - title
      - uuid
    WorkspacePictureUpload:
      type: object
      description: Deserialize an image attachment.
      properties:
        file:
          type: string
          format: uri
    WorkspaceQuota:
      type: object
      description: Serializer quota.
      properties:
        workspace_status:
          $ref: '#/components/schemas/WorkspaceStatusEnum'
        chat_messages:
          $ref: '#/components/schemas/SingleQuota'
        labels:
          $ref: '#/components/schemas/SingleQuota'
        sub_tasks:
          $ref: '#/components/schemas/SingleQuota'
        tasks:
          $ref: '#/components/schemas/SingleQuota'
        task_labels:
          $ref: '#/components/schemas/SingleQuota'
        projects:
          $ref: '#/components/schemas/SingleQuota'
        sections:
          $ref: '#/components/schemas/SingleQuota'
        team_members_and_invites:
          $ref: '#/components/schemas/SingleQuota'
      required:
      - chat_messages
      - labels
      - projects
      - sections
      - sub_tasks
      - task_labels
      - tasks
      - team_members_and_invites
      - workspace_status
    WorkspaceStatusEnum:
      enum:
      - full
      - trial
      - inactive
      type: string
      description: |-
        * `full` - full
        * `trial` - trial
        * `inactive` - inactive
    WorkspaceUpdate:
      type: object
      description: Accept title, description.
      properties:
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
      required:
      - title
    auth_info:
      oneOf:
      - $ref: '#/components/schemas/User'
      - $ref: '#/components/schemas/AnonymousUser'
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
