/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/corporate/stripe-webhook/": {
        /** @description Construct event type using data coming from stripe. */
        post: operations["corporate_stripe_webhook_create"];
    };
    "/corporate/workspace/{workspace_uuid}/create-billing-portal-session": {
        /** @description Handle POST. */
        post: operations["corporate_workspace_create_billing_portal_session_create"];
    };
    "/corporate/workspace/{workspace_uuid}/create-checkout-session": {
        /** @description Handle POST. */
        post: operations["corporate_workspace_create_checkout_session_create"];
    };
    "/corporate/workspace/{workspace_uuid}/customer": {
        /** @description Handle GET. */
        get: operations["corporate_workspace_customer_retrieve"];
    };
    "/corporate/workspace/{workspace_uuid}/redeem-coupon": {
        /** @description Handle POST. */
        post: operations["corporate_workspace_redeem_coupon_create"];
    };
    "/user/user/change-password": {
        /** @description Handle POST. */
        post: operations["user_user_change_password_create"];
    };
    "/user/user/confirm-email": {
        /** @description Handle POST. */
        post: operations["user_user_confirm_email_create"];
    };
    "/user/user/confirm-password-reset": {
        /** @description Handle POST. */
        post: operations["user_user_confirm_password_reset_create"];
    };
    "/user/user/current-user": {
        /** @description Handle GET. */
        get: operations["user_user_current_user_retrieve"];
        /** @description Update a user. */
        put: operations["user_user_current_user_update"];
    };
    "/user/user/email-address-update/confirm": {
        /** @description Handle POST. */
        post: operations["user_user_email_address_update_confirm_create"];
    };
    "/user/user/email-address-update/request": {
        /** @description Handle POST. */
        post: operations["user_user_email_address_update_request_create"];
    };
    "/user/user/log-in": {
        /** @description Handle POST. */
        post: operations["user_user_log_in_create"];
    };
    "/user/user/log-out": {
        /** @description Handle POST. */
        post: operations["user_user_log_out_create"];
    };
    "/user/user/password-policy": {
        /** @description Return all information about current password policy. */
        get: operations["user_user_password_policy_retrieve"];
    };
    "/user/user/profile-picture/upload": {
        /** @description Handle POST. */
        post: operations["user_user_profile_picture_upload_create"];
    };
    "/user/user/request-password-reset": {
        /** @description Handle POST. */
        post: operations["user_user_request_password_reset_create"];
    };
    "/user/user/sign-up": {
        /** @description Handle POST. */
        post: operations["user_user_sign_up_create"];
    };
    "/workspace/label/": {
        /** @description Create the label. */
        post: operations["workspace_label_create"];
    };
    "/workspace/label/{label_uuid}": {
        /** @description Handle PUT. */
        put: operations["workspace_label_update"];
        /** @description Handle DELETE. */
        delete: operations["workspace_label_destroy"];
    };
    "/workspace/project/": {
        /** @description Create a project. */
        post: operations["workspace_project_create"];
    };
    "/workspace/project/{project_uuid}": {
        /** @description Handle GET. */
        get: operations["workspace_project_retrieve"];
        /** @description Handle PUT. */
        put: operations["workspace_project_update"];
        /** @description Handle DELETE. */
        delete: operations["workspace_project_destroy"];
    };
    "/workspace/project/{project_uuid}/archive": {
        /** @description Process request. */
        post: operations["workspace_project_archive_create"];
    };
    "/workspace/section/": {
        /** @description Create a section. */
        post: operations["workspace_section_create"];
    };
    "/workspace/section/{section_uuid}": {
        /** @description Handle GET. */
        get: operations["workspace_section_retrieve"];
        /** @description Update section. */
        put: operations["workspace_section_update"];
        /** @description Handle DELETE. */
        delete: operations["workspace_section_destroy"];
    };
    "/workspace/section/{section_uuid}/move": {
        /** @description Process request. */
        post: operations["workspace_section_move_create"];
    };
    "/workspace/task/": {
        /** @description Handle POST. */
        post: operations["workspace_task_create"];
    };
    "/workspace/task/{task_uuid}": {
        /** @description Handle GET. */
        get: operations["workspace_task_retrieve"];
        /**
         * @description Override update behavior. Return using different serializer.
         *
         * The idea is that we accept abbreviated nested fields, but return
         * the data whole. (ws board section, sub tasks, labels, etc.)
         */
        put: operations["workspace_task_update"];
        /** @description Delete task. */
        delete: operations["workspace_task_destroy"];
    };
    "/workspace/task/{task_uuid}/move-after-task": {
        /** @description Process the request. */
        post: operations["workspace_task_move_after_task_create"];
    };
    "/workspace/task/{task_uuid}/move-to-section": {
        /** @description Process the request. */
        post: operations["workspace_task_move_to_section_create"];
    };
    "/workspace/team-member/{team_member_uuid}": {
        /** @description Handle GET. */
        get: operations["workspace_team_member_retrieve"];
        /** @description Handle PUT. */
        put: operations["workspace_team_member_update"];
        /** @description Handle DELETE. */
        delete: operations["workspace_team_member_destroy"];
    };
    "/workspace/workspace/": {
        /** @description Create the workspace and add this user. */
        post: operations["workspace_workspace_create"];
    };
    "/workspace/workspace/{workspace_uuid}": {
        /** @description Handle GET. */
        get: operations["workspace_workspace_retrieve"];
        /** @description Handle PUT. */
        put: operations["workspace_workspace_update"];
    };
    "/workspace/workspace/{workspace_uuid}/archived-projects/": {
        /** @description Get queryset. */
        get: operations["workspace_workspace_archived_projects_retrieve"];
    };
    "/workspace/workspace/{workspace_uuid}/invite-team-member": {
        /** @description Handle POST. */
        post: operations["workspace_workspace_invite_team_member_create"];
    };
    "/workspace/workspace/{workspace_uuid}/picture-upload": {
        /** @description Handle POST. */
        post: operations["workspace_workspace_picture_upload_create"];
    };
    "/workspace/workspace/{workspace_uuid}/uninvite-team-member": {
        /** @description Handle POST. */
        post: operations["workspace_workspace_uninvite_team_member_create"];
    };
    "/workspace/workspace/user-workspaces/": {
        /** @description Handle GET. */
        get: operations["workspace_workspace_user_workspaces_retrieve"];
    };
}

export type webhooks = Record<string, never>;

export interface components {
    schemas: {
        /** @description Accept old and new password. */
        ChangePassword: {
            current_password: string;
            new_password: string;
        };
        /** @description These fields may be populated in a 400 response. */
        ChangePasswordError: {
            current_password?: string;
            new_password?: string;
            policies?: string[];
        };
        /** @description Serialize password policies. */
        PasswordPolicies: {
            policies: string[];
        };
        /** @description Take in email and password. */
        SignUp: {
            /** Format: email */
            email: string;
            password: string;
            tos_agreed: boolean;
            privacy_policy_agreed: boolean;
        };
        /** @description Hint for drf-spectacular. */
        SignUpError: {
            email?: string;
            password?: string;
            policies?: string[];
            tos_agreed?: string;
            privacy_policy_agreed?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {
    /** @description Construct event type using data coming from stripe. */
    corporate_stripe_webhook_create: {
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Handle POST. */
    corporate_workspace_create_billing_portal_session_create: {
        parameters: {
            path: {
                workspace_uuid: string;
            };
        };
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Handle POST. */
    corporate_workspace_create_checkout_session_create: {
        parameters: {
            path: {
                workspace_uuid: string;
            };
        };
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Handle GET. */
    corporate_workspace_customer_retrieve: {
        parameters: {
            path: {
                workspace_uuid: string;
            };
        };
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Handle POST. */
    corporate_workspace_redeem_coupon_create: {
        parameters: {
            path: {
                workspace_uuid: string;
            };
        };
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Handle POST. */
    user_user_change_password_create: {
        requestBody: {
            content: {
                "application/json": components["schemas"]["ChangePassword"];
                "application/x-www-form-urlencoded": components["schemas"]["ChangePassword"];
                "multipart/form-data": components["schemas"]["ChangePassword"];
            };
        };
        responses: {
            /** @description No response body */
            204: {
                content: never;
            };
            400: {
                content: {
                    "application/json": components["schemas"]["ChangePasswordError"];
                };
            };
        };
    };
    /** @description Handle POST. */
    user_user_confirm_email_create: {
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Handle POST. */
    user_user_confirm_password_reset_create: {
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Handle GET. */
    user_user_current_user_retrieve: {
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Update a user. */
    user_user_current_user_update: {
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Handle POST. */
    user_user_email_address_update_confirm_create: {
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Handle POST. */
    user_user_email_address_update_request_create: {
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Handle POST. */
    user_user_log_in_create: {
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Handle POST. */
    user_user_log_out_create: {
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Return all information about current password policy. */
    user_user_password_policy_retrieve: {
        responses: {
            200: {
                content: {
                    "application/json": components["schemas"]["PasswordPolicies"];
                };
            };
        };
    };
    /** @description Handle POST. */
    user_user_profile_picture_upload_create: {
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Handle POST. */
    user_user_request_password_reset_create: {
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Handle POST. */
    user_user_sign_up_create: {
        requestBody: {
            content: {
                "application/json": components["schemas"]["SignUp"];
                "application/x-www-form-urlencoded": components["schemas"]["SignUp"];
                "multipart/form-data": components["schemas"]["SignUp"];
            };
        };
        responses: {
            /** @description No response body */
            204: {
                content: never;
            };
            400: {
                content: {
                    "application/json": components["schemas"]["SignUpError"];
                };
            };
            /** @description No response body */
            429: {
                content: never;
            };
        };
    };
    /** @description Create the label. */
    workspace_label_create: {
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Handle PUT. */
    workspace_label_update: {
        parameters: {
            path: {
                label_uuid: string;
            };
        };
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Handle DELETE. */
    workspace_label_destroy: {
        parameters: {
            path: {
                label_uuid: string;
            };
        };
        responses: {
            /** @description No response body */
            204: {
                content: never;
            };
        };
    };
    /** @description Create a project. */
    workspace_project_create: {
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Handle GET. */
    workspace_project_retrieve: {
        parameters: {
            path: {
                project_uuid: string;
            };
        };
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Handle PUT. */
    workspace_project_update: {
        parameters: {
            path: {
                project_uuid: string;
            };
        };
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Handle DELETE. */
    workspace_project_destroy: {
        parameters: {
            path: {
                project_uuid: string;
            };
        };
        responses: {
            /** @description No response body */
            204: {
                content: never;
            };
        };
    };
    /** @description Process request. */
    workspace_project_archive_create: {
        parameters: {
            path: {
                project_uuid: string;
            };
        };
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Create a section. */
    workspace_section_create: {
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Handle GET. */
    workspace_section_retrieve: {
        parameters: {
            path: {
                section_uuid: string;
            };
        };
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Update section. */
    workspace_section_update: {
        parameters: {
            path: {
                section_uuid: string;
            };
        };
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Handle DELETE. */
    workspace_section_destroy: {
        parameters: {
            path: {
                section_uuid: string;
            };
        };
        responses: {
            /** @description No response body */
            204: {
                content: never;
            };
        };
    };
    /** @description Process request. */
    workspace_section_move_create: {
        parameters: {
            path: {
                section_uuid: string;
            };
        };
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Handle POST. */
    workspace_task_create: {
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Handle GET. */
    workspace_task_retrieve: {
        parameters: {
            path: {
                task_uuid: string;
            };
        };
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /**
     * @description Override update behavior. Return using different serializer.
     *
     * The idea is that we accept abbreviated nested fields, but return
     * the data whole. (ws board section, sub tasks, labels, etc.)
     */
    workspace_task_update: {
        parameters: {
            path: {
                task_uuid: string;
            };
        };
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Delete task. */
    workspace_task_destroy: {
        parameters: {
            path: {
                task_uuid: string;
            };
        };
        responses: {
            /** @description No response body */
            204: {
                content: never;
            };
        };
    };
    /** @description Process the request. */
    workspace_task_move_after_task_create: {
        parameters: {
            path: {
                task_uuid: string;
            };
        };
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Process the request. */
    workspace_task_move_to_section_create: {
        parameters: {
            path: {
                task_uuid: string;
            };
        };
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Handle GET. */
    workspace_team_member_retrieve: {
        parameters: {
            path: {
                team_member_uuid: string;
            };
        };
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Handle PUT. */
    workspace_team_member_update: {
        parameters: {
            path: {
                team_member_uuid: string;
            };
        };
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Handle DELETE. */
    workspace_team_member_destroy: {
        parameters: {
            path: {
                team_member_uuid: string;
            };
        };
        responses: {
            /** @description No response body */
            204: {
                content: never;
            };
        };
    };
    /** @description Create the workspace and add this user. */
    workspace_workspace_create: {
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Handle GET. */
    workspace_workspace_retrieve: {
        parameters: {
            path: {
                workspace_uuid: string;
            };
        };
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Handle PUT. */
    workspace_workspace_update: {
        parameters: {
            path: {
                workspace_uuid: string;
            };
        };
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Get queryset. */
    workspace_workspace_archived_projects_retrieve: {
        parameters: {
            path: {
                workspace_uuid: string;
            };
        };
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Handle POST. */
    workspace_workspace_invite_team_member_create: {
        parameters: {
            path: {
                workspace_uuid: string;
            };
        };
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Handle POST. */
    workspace_workspace_picture_upload_create: {
        parameters: {
            path: {
                workspace_uuid: string;
            };
        };
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Handle POST. */
    workspace_workspace_uninvite_team_member_create: {
        parameters: {
            path: {
                workspace_uuid: string;
            };
        };
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
    /** @description Handle GET. */
    workspace_workspace_user_workspaces_retrieve: {
        responses: {
            /** @description No response body */
            200: {
                content: never;
            };
        };
    };
}
